# Generated by Django 5.2.3 on 2025-06-30 19:33

import django.db.models.deletion
import orderServices.models
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        default=orderServices.models.generate_order_number,
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("user_id", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("shipping_address", models.JSONField()),
                ("billing_address", models.JSONField()),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("card", "Credit/Debit Card"),
                            ("paypal", "PayPal"),
                            ("bank_transfer", "Bank Transfer"),
                            ("cod", "Cash on Delivery"),
                        ],
                        max_length=50,
                    ),
                ),
                ("payment_status", models.CharField(default="pending", max_length=20)),
                (
                    "payment_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("customer_snapshot", models.JSONField(blank=True, default=dict)),
                (
                    "tracking_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("carrier", models.CharField(blank=True, max_length=50, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("shipped_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user_id"], name="orderServic_user_id_977570_idx"
                    ),
                    models.Index(
                        fields=["status"], name="orderServic_status_866bff_idx"
                    ),
                    models.Index(
                        fields=["order_number"], name="orderServic_order_n_a742e4_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="orderServic_created_805db0_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="OrderNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("note", models.TextField()),
                ("is_internal", models.BooleanField(default=False)),
                ("created_by_id", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_notes",
                        to="orderServices.order",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_by_id", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="orderServices.order",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Order status histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("carrier", models.CharField(blank=True, max_length=50, null=True)),
                ("tracking_url", models.URLField(blank=True, null=True)),
                ("estimated_delivery", models.DateTimeField(blank=True, null=True)),
                ("actual_delivery", models.DateTimeField(blank=True, null=True)),
                (
                    "current_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("tracking_events", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking",
                        to="orderServices.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_id", models.IntegerField()),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("product_snapshot", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="orderServices.order",
                    ),
                ),
            ],
            options={
                "unique_together": {("order", "product_id")},
            },
        ),
    ]
